plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
//	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10" // querydsl 플러그인 추가
}

group = 'ssafy'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven {
		url "https://jitpack.io"
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.15.2'


	//pinata
	implementation files("libs/pinata-java-sdk-2.1.0.jar")
	implementation group: 'com.github.ipld', name: 'java-cid', version: 'v1.3.1'
	implementation group: 'com.github.multiformats', name: 'java-multiaddr', version: 'v1.4.12'
	implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.9.1'
	implementation group: 'commons-io', name: 'commons-io', version: '2.6'
	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'
	implementation group: 'org.json', name: 'json', version: '20230618'
	implementation("io.github.zinebfadili:pinata-java-sdk:2.1.0")


	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	//querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//jwt
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'

}

tasks.named('test') {
	useJUnitPlatform()
}

//web3j {
//	generatedPackageName = 'me.gjeanmart.tutorials.javaethereum.contracts.generated'
//	generatedFilesBaseDir = "$buildDir/contracts"
//}
//
//solidity {
//	executable = './solc-windows.exe'    // Path to Solc Compiler file
//	version = '0.8.18'
//}


//// querydsl에서 사용할 경로 설정
//def querydslDir = "$buildDir/generated/querydsl"
//
//// JPA 사용 여부 및 사용할 경로 설정
//querydsl {
//	jpa = true
//	querydslSourcesDir = querydslDir
//}
//
//// build 시 사용할 sourceSet 추가 설정
//sourceSets {
//	main.java.srcDir querydslDir
//}
//
//// querydsl 컴파일 시 사용할 옵션 설정
//compileQuerydsl{
//	options.annotationProcessorPath = configurations.querydsl
//}
//
//// querydsl이 compileClassPath를 상속하도록 설정
//configurations {
//	compileOnly {
//		extendsFrom annotationProcessor
//	}
//	querydsl.extendsFrom compileClasspath
//}