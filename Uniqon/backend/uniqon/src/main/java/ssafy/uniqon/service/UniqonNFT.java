//package ssafy.uniqon.service;
//
//import java.math.BigInteger;
//import java.util.ArrayList;
//import java.util.Arrays;
//import java.util.Collections;
//import java.util.List;
//import org.web3j.abi.EventEncoder;
//import org.web3j.abi.TypeReference;
//import org.web3j.abi.datatypes.Address;
//import org.web3j.abi.datatypes.Bool;
//import org.web3j.abi.datatypes.Event;
//import org.web3j.abi.datatypes.Function;
//import org.web3j.abi.datatypes.Type;
//import org.web3j.abi.datatypes.Utf8String;
//import org.web3j.abi.datatypes.generated.Uint256;
//import org.web3j.crypto.Credentials;
//import org.web3j.protocol.Web3j;
//import org.web3j.protocol.core.DefaultBlockParameter;
//import org.web3j.protocol.core.RemoteCall;
//import org.web3j.protocol.core.RemoteFunctionCall;
//import org.web3j.protocol.core.methods.request.EthFilter;
//import org.web3j.protocol.core.methods.response.BaseEventResponse;
//import org.web3j.protocol.core.methods.response.Log;
//import org.web3j.protocol.core.methods.response.TransactionReceipt;
//import org.web3j.tx.Contract;
//import org.web3j.tx.TransactionManager;
//import org.web3j.tx.gas.ContractGasProvider;
//
///**
// * <p>Auto generated code.
// * <p><strong>Do not modify!</strong>
// * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
// * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the
// * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
// *
// * <p>Generated with web3j version 1.5.0.
// */
//@SuppressWarnings("rawtypes")
//public class UniqonNFT extends Contract {
//    public static final String BINARY = "";
//
//    public static final String FUNC_MINT_PRICE = "MINT_PRICE";
//
//    public static final String FUNC_APPROVE = "approve";
//
//    public static final String FUNC_BALANCEOF = "balanceOf";
//
//    public static final String FUNC_BURNNFT = "burnNFT";
//
//    public static final String FUNC_CONTRACTOWNER = "contractOwner";
//
//    public static final String FUNC_GETAPPROVED = "getApproved";
//
//    public static final String FUNC_GETCONTRACTBALANCE = "getContractBalance";
//
//    public static final String FUNC_ISAPPROVEDFORALL = "isApprovedForAll";
//
//    public static final String FUNC_MINTNFT = "mintNFT";
//
//    public static final String FUNC_NAME = "name";
//
//    public static final String FUNC_OWNER = "owner";
//
//    public static final String FUNC_OWNEROF = "ownerOf";
//
//    public static final String FUNC_RENOUNCEOWNERSHIP = "renounceOwnership";
//
//    public static final String FUNC_safeTransferFrom = "safeTransferFrom";
//
//    public static final String FUNC_SALENFT = "saleNFT";
//
//    public static final String FUNC_SETAPPROVALFORALL = "setApprovalForAll";
//
//    public static final String FUNC_SUPPORTSINTERFACE = "supportsInterface";
//
//    public static final String FUNC_SYMBOL = "symbol";
//
//    public static final String FUNC_TOKENURI = "tokenURI";
//
//    public static final String FUNC_TRANSFERFROM = "transferFrom";
//
//    public static final String FUNC_TRANSFEROWNERSHIP = "transferOwnership";
//
//    public static final String FUNC_TRANSFERTO = "transferTo";
//
//    public static final Event APPROVAL_EVENT = new Event("Approval",
//            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Uint256>(true) {}));
//    ;
//
//    public static final Event APPROVALFORALL_EVENT = new Event("ApprovalForAll",
//            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Bool>() {}));
//    ;
//
//    public static final Event BATCHMETADATAUPDATE_EVENT = new Event("BatchMetadataUpdate",
//            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
//    ;
//
//    public static final Event METADATAUPDATE_EVENT = new Event("MetadataUpdate",
//            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
//    ;
//
//    public static final Event OWNERSHIPTRANSFERRED_EVENT = new Event("OwnershipTransferred",
//            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
//    ;
//
//    public static final Event TRANSFER_EVENT = new Event("Transfer",
//            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Uint256>(true) {}));
//    ;
//
//    @Deprecated
//    protected UniqonNFT(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
//        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
//    }
//
//    protected UniqonNFT(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
//        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
//    }
//
//    @Deprecated
//    protected UniqonNFT(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
//        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
//    }
//
//    protected UniqonNFT(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
//        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
//    }
//
//    public static List<ApprovalEventResponse> getApprovalEvents(TransactionReceipt transactionReceipt) {
//        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(APPROVAL_EVENT, transactionReceipt);
//        ArrayList<ApprovalEventResponse> responses = new ArrayList<ApprovalEventResponse>(valueList.size());
//        for (Contract.EventValuesWithLog eventValues : valueList) {
//            ApprovalEventResponse typedResponse = new ApprovalEventResponse();
//            typedResponse.log = eventValues.getLog();
//            typedResponse.owner = (String) eventValues.getIndexedValues().get(0).getValue();
//            typedResponse.approved = (String) eventValues.getIndexedValues().get(1).getValue();
//            typedResponse.tokenId = (BigInteger) eventValues.getIndexedValues().get(2).getValue();
//            responses.add(typedResponse);
//        }
//        return responses;
//    }
//
//    public static ApprovalEventResponse getApprovalEventFromLog(Log log) {
//        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(APPROVAL_EVENT, log);
//        ApprovalEventResponse typedResponse = new ApprovalEventResponse();
//        typedResponse.log = log;
//        typedResponse.owner = (String) eventValues.getIndexedValues().get(0).getValue();
//        typedResponse.approved = (String) eventValues.getIndexedValues().get(1).getValue();
//        typedResponse.tokenId = (BigInteger) eventValues.getIndexedValues().get(2).getValue();
//        return typedResponse;
//    }
//
//    public Flowable<ApprovalEventResponse> approvalEventFlowable(EthFilter filter) {
//        return web3j.ethLogFlowable(filter).map(log -> getApprovalEventFromLog(log));
//    }
//
//    public Flowable<ApprovalEventResponse> approvalEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
//        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
//        filter.addSingleTopic(EventEncoder.encode(APPROVAL_EVENT));
//        return approvalEventFlowable(filter);
//    }
//
//    public static List<ApprovalForAllEventResponse> getApprovalForAllEvents(TransactionReceipt transactionReceipt) {
//        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(APPROVALFORALL_EVENT, transactionReceipt);
//        ArrayList<ApprovalForAllEventResponse> responses = new ArrayList<ApprovalForAllEventResponse>(valueList.size());
//        for (Contract.EventValuesWithLog eventValues : valueList) {
//            ApprovalForAllEventResponse typedResponse = new ApprovalForAllEventResponse();
//            typedResponse.log = eventValues.getLog();
//            typedResponse.owner = (String) eventValues.getIndexedValues().get(0).getValue();
//            typedResponse.operator = (String) eventValues.getIndexedValues().get(1).getValue();
//            typedResponse.approved = (Boolean) eventValues.getNonIndexedValues().get(0).getValue();
//            responses.add(typedResponse);
//        }
//        return responses;
//    }
//
//    public static ApprovalForAllEventResponse getApprovalForAllEventFromLog(Log log) {
//        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(APPROVALFORALL_EVENT, log);
//        ApprovalForAllEventResponse typedResponse = new ApprovalForAllEventResponse();
//        typedResponse.log = log;
//        typedResponse.owner = (String) eventValues.getIndexedValues().get(0).getValue();
//        typedResponse.operator = (String) eventValues.getIndexedValues().get(1).getValue();
//        typedResponse.approved = (Boolean) eventValues.getNonIndexedValues().get(0).getValue();
//        return typedResponse;
//    }
//
//    public Flowable<ApprovalForAllEventResponse> approvalForAllEventFlowable(EthFilter filter) {
//        return web3j.ethLogFlowable(filter).map(log -> getApprovalForAllEventFromLog(log));
//    }
//
//    public Flowable<ApprovalForAllEventResponse> approvalForAllEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
//        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
//        filter.addSingleTopic(EventEncoder.encode(APPROVALFORALL_EVENT));
//        return approvalForAllEventFlowable(filter);
//    }
//
//    public static List<BatchMetadataUpdateEventResponse> getBatchMetadataUpdateEvents(TransactionReceipt transactionReceipt) {
//        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(BATCHMETADATAUPDATE_EVENT, transactionReceipt);
//        ArrayList<BatchMetadataUpdateEventResponse> responses = new ArrayList<BatchMetadataUpdateEventResponse>(valueList.size());
//        for (Contract.EventValuesWithLog eventValues : valueList) {
//            BatchMetadataUpdateEventResponse typedResponse = new BatchMetadataUpdateEventResponse();
//            typedResponse.log = eventValues.getLog();
//            typedResponse._fromTokenId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
//            typedResponse._toTokenId = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
//            responses.add(typedResponse);
//        }
//        return responses;
//    }
//
//    public static BatchMetadataUpdateEventResponse getBatchMetadataUpdateEventFromLog(Log log) {
//        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(BATCHMETADATAUPDATE_EVENT, log);
//        BatchMetadataUpdateEventResponse typedResponse = new BatchMetadataUpdateEventResponse();
//        typedResponse.log = log;
//        typedResponse._fromTokenId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
//        typedResponse._toTokenId = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
//        return typedResponse;
//    }
//
//    public Flowable<BatchMetadataUpdateEventResponse> batchMetadataUpdateEventFlowable(EthFilter filter) {
//        return web3j.ethLogFlowable(filter).map(log -> getBatchMetadataUpdateEventFromLog(log));
//    }
//
//    public Flowable<BatchMetadataUpdateEventResponse> batchMetadataUpdateEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
//        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
//        filter.addSingleTopic(EventEncoder.encode(BATCHMETADATAUPDATE_EVENT));
//        return batchMetadataUpdateEventFlowable(filter);
//    }
//
//    public static List<MetadataUpdateEventResponse> getMetadataUpdateEvents(TransactionReceipt transactionReceipt) {
//        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(METADATAUPDATE_EVENT, transactionReceipt);
//        ArrayList<MetadataUpdateEventResponse> responses = new ArrayList<MetadataUpdateEventResponse>(valueList.size());
//        for (Contract.EventValuesWithLog eventValues : valueList) {
//            MetadataUpdateEventResponse typedResponse = new MetadataUpdateEventResponse();
//            typedResponse.log = eventValues.getLog();
//            typedResponse._tokenId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
//            responses.add(typedResponse);
//        }
//        return responses;
//    }
//
//    public static MetadataUpdateEventResponse getMetadataUpdateEventFromLog(Log log) {
//        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(METADATAUPDATE_EVENT, log);
//        MetadataUpdateEventResponse typedResponse = new MetadataUpdateEventResponse();
//        typedResponse.log = log;
//        typedResponse._tokenId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
//        return typedResponse;
//    }
//
//    public Flowable<MetadataUpdateEventResponse> metadataUpdateEventFlowable(EthFilter filter) {
//        return web3j.ethLogFlowable(filter).map(log -> getMetadataUpdateEventFromLog(log));
//    }
//
//    public Flowable<MetadataUpdateEventResponse> metadataUpdateEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
//        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
//        filter.addSingleTopic(EventEncoder.encode(METADATAUPDATE_EVENT));
//        return metadataUpdateEventFlowable(filter);
//    }
//
//    public static List<OwnershipTransferredEventResponse> getOwnershipTransferredEvents(TransactionReceipt transactionReceipt) {
//        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(OWNERSHIPTRANSFERRED_EVENT, transactionReceipt);
//        ArrayList<OwnershipTransferredEventResponse> responses = new ArrayList<OwnershipTransferredEventResponse>(valueList.size());
//        for (Contract.EventValuesWithLog eventValues : valueList) {
//            OwnershipTransferredEventResponse typedResponse = new OwnershipTransferredEventResponse();
//            typedResponse.log = eventValues.getLog();
//            typedResponse.previousOwner = (String) eventValues.getIndexedValues().get(0).getValue();
//            typedResponse.newOwner = (String) eventValues.getIndexedValues().get(1).getValue();
//            responses.add(typedResponse);
//        }
//        return responses;
//    }
//
//    public static OwnershipTransferredEventResponse getOwnershipTransferredEventFromLog(Log log) {
//        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(OWNERSHIPTRANSFERRED_EVENT, log);
//        OwnershipTransferredEventResponse typedResponse = new OwnershipTransferredEventResponse();
//        typedResponse.log = log;
//        typedResponse.previousOwner = (String) eventValues.getIndexedValues().get(0).getValue();
//        typedResponse.newOwner = (String) eventValues.getIndexedValues().get(1).getValue();
//        return typedResponse;
//    }
//
//    public Flowable<OwnershipTransferredEventResponse> ownershipTransferredEventFlowable(EthFilter filter) {
//        return web3j.ethLogFlowable(filter).map(log -> getOwnershipTransferredEventFromLog(log));
//    }
//
//    public Flowable<OwnershipTransferredEventResponse> ownershipTransferredEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
//        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
//        filter.addSingleTopic(EventEncoder.encode(OWNERSHIPTRANSFERRED_EVENT));
//        return ownershipTransferredEventFlowable(filter);
//    }
//
//    public static List<TransferEventResponse> getTransferEvents(TransactionReceipt transactionReceipt) {
//        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(TRANSFER_EVENT, transactionReceipt);
//        ArrayList<TransferEventResponse> responses = new ArrayList<TransferEventResponse>(valueList.size());
//        for (Contract.EventValuesWithLog eventValues : valueList) {
//            TransferEventResponse typedResponse = new TransferEventResponse();
//            typedResponse.log = eventValues.getLog();
//            typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
//            typedResponse.to = (String) eventValues.getIndexedValues().get(1).getValue();
//            typedResponse.tokenId = (BigInteger) eventValues.getIndexedValues().get(2).getValue();
//            responses.add(typedResponse);
//        }
//        return responses;
//    }
//
//    public static TransferEventResponse getTransferEventFromLog(Log log) {
//        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(TRANSFER_EVENT, log);
//        TransferEventResponse typedResponse = new TransferEventResponse();
//        typedResponse.log = log;
//        typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
//        typedResponse.to = (String) eventValues.getIndexedValues().get(1).getValue();
//        typedResponse.tokenId = (BigInteger) eventValues.getIndexedValues().get(2).getValue();
//        return typedResponse;
//    }
//
//    public Flowable<TransferEventResponse> transferEventFlowable(EthFilter filter) {
//        return web3j.ethLogFlowable(filter).map(log -> getTransferEventFromLog(log));
//    }
//
//    public Flowable<TransferEventResponse> transferEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
//        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
//        filter.addSingleTopic(EventEncoder.encode(TRANSFER_EVENT));
//        return transferEventFlowable(filter);
//    }
//
//    public RemoteFunctionCall<BigInteger> MINT_PRICE() {
//        final Function function = new Function(FUNC_MINT_PRICE,
//                Arrays.<Type>asList(),
//                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
//        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
//    }
//
//    public RemoteFunctionCall<TransactionReceipt> approve(String to, BigInteger tokenId) {
//        final Function function = new Function(
//                FUNC_APPROVE,
//                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, to),
//                new org.web3j.abi.datatypes.generated.Uint256(tokenId)),
//                Collections.<TypeReference<?>>emptyList());
//        return executeRemoteCallTransaction(function);
//    }
//
//    public RemoteFunctionCall<BigInteger> balanceOf(String owner) {
//        final Function function = new Function(FUNC_BALANCEOF,
//                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, owner)),
//                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
//        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
//    }
//
//    public RemoteFunctionCall<TransactionReceipt> burnNFT(BigInteger tokenId) {
//        final Function function = new Function(
//                FUNC_BURNNFT,
//                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(tokenId)),
//                Collections.<TypeReference<?>>emptyList());
//        return executeRemoteCallTransaction(function);
//    }
//
//    public RemoteFunctionCall<String> contractOwner() {
//        final Function function = new Function(FUNC_CONTRACTOWNER,
//                Arrays.<Type>asList(),
//                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
//        return executeRemoteCallSingleValueReturn(function, String.class);
//    }
//
//    public RemoteFunctionCall<String> getApproved(BigInteger tokenId) {
//        final Function function = new Function(FUNC_GETAPPROVED,
//                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(tokenId)),
//                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
//        return executeRemoteCallSingleValueReturn(function, String.class);
//    }
//
//    public RemoteFunctionCall<BigInteger> getContractBalance() {
//        final Function function = new Function(FUNC_GETCONTRACTBALANCE,
//                Arrays.<Type>asList(),
//                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
//        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
//    }
//
//    public RemoteFunctionCall<Boolean> isApprovedForAll(String owner, String operator) {
//        final Function function = new Function(FUNC_ISAPPROVEDFORALL,
//                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, owner),
//                new org.web3j.abi.datatypes.Address(160, operator)),
//                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
//        return executeRemoteCallSingleValueReturn(function, Boolean.class);
//    }
//
//    public RemoteFunctionCall<TransactionReceipt> mintNFT(String recipient, String tokenURI, BigInteger weiValue) {
//        final Function function = new Function(
//                FUNC_MINTNFT,
//                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, recipient),
//                new org.web3j.abi.datatypes.Utf8String(tokenURI)),
//                Collections.<TypeReference<?>>emptyList());
//        return executeRemoteCallTransaction(function, weiValue);
//    }
//
//    public RemoteFunctionCall<String> name() {
//        final Function function = new Function(FUNC_NAME,
//                Arrays.<Type>asList(),
//                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
//        return executeRemoteCallSingleValueReturn(function, String.class);
//    }
//
//    public RemoteFunctionCall<String> owner() {
//        final Function function = new Function(FUNC_OWNER,
//                Arrays.<Type>asList(),
//                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
//        return executeRemoteCallSingleValueReturn(function, String.class);
//    }
//
//    public RemoteFunctionCall<String> ownerOf(BigInteger tokenId) {
//        final Function function = new Function(FUNC_OWNEROF,
//                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(tokenId)),
//                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
//        return executeRemoteCallSingleValueReturn(function, String.class);
//    }
//
//    public RemoteFunctionCall<TransactionReceipt> renounceOwnership() {
//        final Function function = new Function(
//                FUNC_RENOUNCEOWNERSHIP,
//                Arrays.<Type>asList(),
//                Collections.<TypeReference<?>>emptyList());
//        return executeRemoteCallTransaction(function);
//    }
//
//    public RemoteFunctionCall<TransactionReceipt> safeTransferFrom(String from, String to, BigInteger tokenId) {
//        final Function function = new Function(
//                FUNC_safeTransferFrom,
//                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, from),
//                new org.web3j.abi.datatypes.Address(160, to),
//                new org.web3j.abi.datatypes.generated.Uint256(tokenId)),
//                Collections.<TypeReference<?>>emptyList());
//        return executeRemoteCallTransaction(function);
//    }
//
//    public RemoteFunctionCall<TransactionReceipt> safeTransferFrom(String from, String to, BigInteger tokenId, byte[] data) {
//        final Function function = new Function(
//                FUNC_safeTransferFrom,
//                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, from),
//                new org.web3j.abi.datatypes.Address(160, to),
//                new org.web3j.abi.datatypes.generated.Uint256(tokenId),
//                new org.web3j.abi.datatypes.DynamicBytes(data)),
//                Collections.<TypeReference<?>>emptyList());
//        return executeRemoteCallTransaction(function);
//    }
//
//    public RemoteFunctionCall<TransactionReceipt> saleNFT(String seller, BigInteger price, BigInteger tokenId, BigInteger weiValue) {
//        final Function function = new Function(
//                FUNC_SALENFT,
//                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, seller),
//                new org.web3j.abi.datatypes.generated.Uint256(price),
//                new org.web3j.abi.datatypes.generated.Uint256(tokenId)),
//                Collections.<TypeReference<?>>emptyList());
//        return executeRemoteCallTransaction(function, weiValue);
//    }
//
//    public RemoteFunctionCall<TransactionReceipt> setApprovalForAll(String operator, Boolean approved) {
//        final Function function = new Function(
//                FUNC_SETAPPROVALFORALL,
//                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, operator),
//                new org.web3j.abi.datatypes.Bool(approved)),
//                Collections.<TypeReference<?>>emptyList());
//        return executeRemoteCallTransaction(function);
//    }
//
//    public RemoteFunctionCall<Boolean> supportsInterface(byte[] interfaceId) {
//        final Function function = new Function(FUNC_SUPPORTSINTERFACE,
//                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes4(interfaceId)),
//                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
//        return executeRemoteCallSingleValueReturn(function, Boolean.class);
//    }
//
//    public RemoteFunctionCall<String> symbol() {
//        final Function function = new Function(FUNC_SYMBOL,
//                Arrays.<Type>asList(),
//                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
//        return executeRemoteCallSingleValueReturn(function, String.class);
//    }
//
//    public RemoteFunctionCall<String> tokenURI(BigInteger tokenId) {
//        final Function function = new Function(FUNC_TOKENURI,
//                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(tokenId)),
//                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
//        return executeRemoteCallSingleValueReturn(function, String.class);
//    }
//
//    public RemoteFunctionCall<TransactionReceipt> transferFrom(String from, String to, BigInteger tokenId) {
//        final Function function = new Function(
//                FUNC_TRANSFERFROM,
//                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, from),
//                new org.web3j.abi.datatypes.Address(160, to),
//                new org.web3j.abi.datatypes.generated.Uint256(tokenId)),
//                Collections.<TypeReference<?>>emptyList());
//        return executeRemoteCallTransaction(function);
//    }
//
//    public RemoteFunctionCall<TransactionReceipt> transferOwnership(String newOwner) {
//        final Function function = new Function(
//                FUNC_TRANSFEROWNERSHIP,
//                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, newOwner)),
//                Collections.<TypeReference<?>>emptyList());
//        return executeRemoteCallTransaction(function);
//    }
//
//    public RemoteFunctionCall<TransactionReceipt> transferTo(String recipient, BigInteger weiValue) {
//        final Function function = new Function(
//                FUNC_TRANSFERTO,
//                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, recipient)),
//                Collections.<TypeReference<?>>emptyList());
//        return executeRemoteCallTransaction(function, weiValue);
//    }
//
//    @Deprecated
//    public static UniqonNFT load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
//        return new UniqonNFT(contractAddress, web3j, credentials, gasPrice, gasLimit);
//    }
//
//    @Deprecated
//    public static UniqonNFT load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
//        return new UniqonNFT(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
//    }
//
//    public static UniqonNFT load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
//        return new UniqonNFT(contractAddress, web3j, credentials, contractGasProvider);
//    }
//
//    public static UniqonNFT load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
//        return new UniqonNFT(contractAddress, web3j, transactionManager, contractGasProvider);
//    }
//
//    public static RemoteCall<UniqonNFT> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
//        return deployRemoteCall(UniqonNFT.class, web3j, credentials, contractGasProvider, BINARY, "");
//    }
//
//    public static RemoteCall<UniqonNFT> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
//        return deployRemoteCall(UniqonNFT.class, web3j, transactionManager, contractGasProvider, BINARY, "");
//    }
//
//    @Deprecated
//    public static RemoteCall<UniqonNFT> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
//        return deployRemoteCall(UniqonNFT.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
//    }
//
//    @Deprecated
//    public static RemoteCall<UniqonNFT> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
//        return deployRemoteCall(UniqonNFT.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
//    }
//
//    public static class ApprovalEventResponse extends BaseEventResponse {
//        public String owner;
//
//        public String approved;
//
//        public BigInteger tokenId;
//    }
//
//    public static class ApprovalForAllEventResponse extends BaseEventResponse {
//        public String owner;
//
//        public String operator;
//
//        public Boolean approved;
//    }
//
//    public static class BatchMetadataUpdateEventResponse extends BaseEventResponse {
//        public BigInteger _fromTokenId;
//
//        public BigInteger _toTokenId;
//    }
//
//    public static class MetadataUpdateEventResponse extends BaseEventResponse {
//        public BigInteger _tokenId;
//    }
//
//    public static class OwnershipTransferredEventResponse extends BaseEventResponse {
//        public String previousOwner;
//
//        public String newOwner;
//    }
//
//    public static class TransferEventResponse extends BaseEventResponse {
//        public String from;
//
//        public String to;
//
//        public BigInteger tokenId;
//    }
//}
